wattadvisor.components.thermal_energy_storage
=============================================

.. py:module:: wattadvisor.components.thermal_energy_storage

.. autoapi-nested-parse::

   Copyright (c) 2007, Eclipse Foundation, Inc. and its licensors. All rights reserved.
   Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.



Classes
-------

.. autoapisummary::

   wattadvisor.components.thermal_energy_storage.ThermalEnergyStorage


Module Contents
---------------

.. py:class:: ThermalEnergyStorage(**data)

   Bases: :py:obj:`wattadvisor.components.investment_component.InvestmentComponent`


   Component where thermal energy can be stored and later taken out again, due to
   efficiency some of the stored energy is lost.

   :param installed_capacity: Already installed thermal storage capacity of the component [kWh] which acts as a lower bound, by default 0
   :type installed_capacity: float, optional
   :param installed_power: Already installed thermal power of the component [kW] which acts as a lower bound, by default 0
   :type installed_power: float, optional
   :param potential_capacity: Maximum installable thermal storage capacity of the component [kWh], by default None
   :type potential_capacity: float | None, optional
   :param potential_power: Maximum installable thermal power of the component [kW], by default None
   :type potential_power: float | None, optional
   :param capex_power: Capital expenditure cost part of the component per thermal power [€/kW], by default 1e-5
   :type capex_power: float, optional
   :param capex_capacity: Capital expenditure cost part of the component per thermal energy storage [€/kWh], by default 0
   :type capex_capacity: float, optional
   :param initial_soc: SOC of the storage [%]  at first timestep of the optimization, by default 0%
   :type initial_soc: float, optional
   :param opex: Operational expenditure cost of the component per CAPEX per year [%/a], by default None, by default None
   :type opex: float | None, optional
   :param eff: Storage efficiency [-]
   :type eff: float
   :param relative_losses: Losses of stored energy over time [% of the stored energy per hour]
   :type relative_losses: float


   .. py:attribute:: installed_capacity
      :type:  float


   .. py:attribute:: installed_power
      :type:  float


   .. py:attribute:: potential_capacity
      :type:  float | None


   .. py:attribute:: potential_power
      :type:  float | None


   .. py:attribute:: capex_power
      :type:  float


   .. py:attribute:: capex_capacity
      :type:  float


   .. py:attribute:: initial_soc
      :type:  float


   .. py:attribute:: opex
      :type:  float


   .. py:attribute:: eff
      :type:  float


   .. py:attribute:: relative_losses
      :type:  float


