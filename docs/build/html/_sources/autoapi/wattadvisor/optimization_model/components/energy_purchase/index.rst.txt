wattadvisor.optimization_model.components.energy_purchase
=========================================================

.. py:module:: wattadvisor.optimization_model.components.energy_purchase

.. autoapi-nested-parse::

   Copyright (c) 2007, Eclipse Foundation, Inc. and its licensors. All rights reserved.
   Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.



Classes
-------

.. autoapisummary::

   wattadvisor.optimization_model.components.energy_purchase.EnergyPurchase


Module Contents
---------------

.. py:class:: EnergyPurchase(name: str, parameters: dict, energy_type: wattadvisor.data_models.enums.EnergyType, energy_price_scalar: float | None = None, energy_price_profile: pandas.Series | None = None, power_price: float | None = None)

   Bases: :py:obj:`wattadvisor.optimization_model.components.base.Component`


   
   Component that simulates the import and obtaining of energy from external sources
   in different forms like gas, oil, electricity or heat.
   This component imports electric power and applies a cost for the amount imported as
   well as a monthly base rate depending on the consumption.

   :param name: Name of the component
   :type name: str
   :param parameters: Dictionary of techno-economic parameters of the component, by default None.
                      A dict of the following structure is expeceted.
                      At least one key at first level ("scalars" or "tabs") is required:

                      .. code-block:: json

                          {
                              "scalars": {
                                  "parameter_title": 0
                              },
                              "tabs": {
                                  "tab_title": {
                                      "key_1": 1,
                                      "key_2": 2
                                  }
                              }
                          }
   :type parameters: dict
   :param energy_type: Energy type which is purchased
   :type energy_type: enums.EnergyType
   :param energy_price_scalar: Scalar price for purchasement per energy unit [€/kWh], by default None
   :type energy_price_scalar: float | None, optional
   :param energy_price_profile: Time series containing hourly variant energy prices for one year, by default None
   :type energy_price_profile: pd.Series | None, optional
   :param power_price: Price to pay for maximum grid load per year [€/(kW * a)], by default None
   :type power_price: float | None, optional


   .. py:attribute:: energy_type


   .. py:attribute:: energy_price_profile


   .. py:attribute:: energy_price_scalar


   .. py:attribute:: power_price


