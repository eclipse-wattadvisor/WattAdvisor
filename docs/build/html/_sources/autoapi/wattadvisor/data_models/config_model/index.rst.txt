wattadvisor.data_models.config_model
====================================

.. py:module:: wattadvisor.data_models.config_model

.. autoapi-nested-parse::

   Contains the definition of pydantic models
   representing the WattAdvisor optimization model config.

   Copyright (c) 2007, Eclipse Foundation, Inc. and its licensors. All rights reserved.
   Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.



Classes
-------

.. autoapisummary::

   wattadvisor.data_models.config_model.ConfigModelWeatherDataPathCsv
   wattadvisor.data_models.config_model.ConfigModelWeatherDataPathNetcdf
   wattadvisor.data_models.config_model.ConfigModelWeatherData
   wattadvisor.data_models.config_model.ConfigModelLogging
   wattadvisor.data_models.config_model.ConfigModelSolver
   wattadvisor.data_models.config_model.ConfigModel


Module Contents
---------------

.. py:class:: ConfigModelWeatherDataPathCsv

   Bases: :py:obj:`pydantic.BaseModel`


   .. py:attribute:: csv_solar
      :type:  str


   .. py:attribute:: csv_temperature
      :type:  str


   .. py:attribute:: csv_wind
      :type:  str


   .. py:method:: is_file(v)


.. py:class:: ConfigModelWeatherDataPathNetcdf

   Bases: :py:obj:`pydantic.BaseModel`


   .. py:attribute:: netcdf
      :type:  str


   .. py:method:: is_file(v)


.. py:class:: ConfigModelWeatherData

   Bases: :py:obj:`pydantic.BaseModel`


   .. py:attribute:: source
      :type:  wattadvisor.data_models.enums.WeatherDataSource


   .. py:attribute:: path
      :type:  ConfigModelWeatherDataPathNetcdf | ConfigModelWeatherDataPathCsv


.. py:class:: ConfigModelLogging

   Bases: :py:obj:`pydantic.BaseModel`


   .. py:attribute:: version
      :type:  int


   .. py:attribute:: formatters
      :type:  dict | None


   .. py:attribute:: handlers
      :type:  dict


   .. py:attribute:: loggers
      :type:  dict


   .. py:attribute:: root
      :type:  dict | None


.. py:class:: ConfigModelSolver

   Bases: :py:obj:`pydantic.BaseModel`


   .. py:attribute:: use_solver
      :type:  wattadvisor.data_models.enums.SupportedSolver


   .. py:attribute:: timeout
      :type:  int


   .. py:attribute:: executable_path
      :type:  str | None


.. py:class:: ConfigModel

   Bases: :py:obj:`pydantic.BaseModel`


   .. py:attribute:: solver
      :type:  ConfigModelSolver


   .. py:attribute:: default_interest_rate
      :type:  float


   .. py:attribute:: weather_data
      :type:  ConfigModelWeatherData


   .. py:attribute:: parameters_path
      :type:  str


   .. py:attribute:: logging
      :type:  ConfigModelLogging | None


