:py:mod:`recommendation_service.optimization_model.components.wind_power`
=========================================================================

.. py:module:: recommendation_service.optimization_model.components.wind_power


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   recommendation_service.optimization_model.components.wind_power.WindPower




.. py:class:: WindPower(name: str, interest_rate: float, parameters: dict, latitude: float, longitude: float, weather_data: pandas.DataFrame, installed_power: float, potential_power: float | None = None, capex: float | None = None, opex: float | None = None, lifespan: float | None = None, hub_height: float = 100)


   Bases: :py:obj:`recommendation_service.optimization_model.components.base.Component`

   
   Component to generate electrical energy from wind energy.

   :param name: Name of the component
   :type name: str
   :param interest_rate: Interest rate to determine annuity factor for investment calculation of the component, by default None
   :type interest_rate: float
   :param parameters: Dictionary of techno-economic parameters of the component, by default None.
                      A dict of the following structure is expeceted.
                      At least one key at first level ("scalars" or "tabs") is required:

                      .. code-block:: json

                          {
                              "scalars": {
                                  "parameter_title": 0
                              },
                              "tabs": {
                                  "tab_title": {
                                      "key_1": 1,
                                      "key_2": 2
                                  }
                              }
                          }
   :type parameters: dict

   latitude : float
       Latitude of the location of the component
   longitude : float
       Longitude of the location of the component
   weather_data : pd.Series
       Time series of hourly weather data for one year generated by the function call `..utils.weather_data.get_weather_data_from_file(..., lib="windpowerlib")`
   installed_power : float
       Already installed electrical power of the component [kW] which acts as a lower bound
   potential_power : float | None, optional
       Maximum installable electrical power of the component [kW], by default None
   capex : float | None, optional
       Capital expenditure cost of the component per electrical power [â‚¬/kW], by default None
   opex : float | None, optional
       Operational expenditure cost of the component per CAPEX per year [%/a], by default None
   hub_height: float
       height of the wind power plant hub above ground of the plant [m], by default 200


